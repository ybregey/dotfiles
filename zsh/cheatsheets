__mongo() {
  echo "db.setLogLevel(1) # log queries"
}

__db() {
 echo "PGPASSWORD=<password> createdb   -h <host> --username <username> <database>"
 echo "PGPASSWORD=<password> dropdb     -h <host> --username <username> <database>"
 echo "PGPASSWORD=<password> pg_dump    -h <host> --username <username> --verbose --clean --no-owner --no-acl -Z4 -Fc <database> > <dump_filename>"
 echo "PGPASSWORD=<password> pg_restore -h <host> --username <username> --verbose --clean --no-owner --no-acl -j <jobs> -d <database> <dump_filename>"
}

__rails() {
  echo "app.post(url, params: {message: "message"}, headers: {authorization: "token" })"
}

__passenger() {
  echo "
    passenger start
    passenger-status
    passenger-status --show=requests
    passenger-config system-metrics
  "
}

__sidekiq() {
  echo "
    require "sidekiq/api"

    Sidekiq::RetrySet.new.clear
    Sidekiq::ScheduledSet.new.clear
    Sidekiq::DeadSet.new.clear
    Sidekiq::Stats.new.reset # clear 'Processed' and 'Failed' jobs

    Sidekiq::Stats.new.fetch_stats!
    Sidekiq::Stats.new.queues # {"mailers"=>25, "default"=>1}
    Sidekiq::Stats.new.processed
    Sidekiq::Stats::History.new(2, Date.parse('2019-02-05')).processed

    queue = Sidekiq::Queue.new("notification")
    queue.count
    queue.each { |job| job.item } # hash content
    # queue.clear

    # redis
    Sidekiq.redis { |redis| redis.keys }
  "
}

__find() {
  echo "
    find <path> <conditions> [<actions>]
    <conditions>
      -type f # File
      -type d # Directory
      -type l # Symlink
      -size +10M # Larger than 10MiB

    Examples:
      find . -name foo.txt                            # search under the current dir
      find . -name "*.txt"                            # wildcard
      find . -type f -mtime +29                       # find files modified more than 30 days ago
      find /users/al -name Cookbook -type d           # search '/users/al'
      find . -name '*.jpg' -exec rm {} \;             # remove
      find . -iname foo                               # case-insensitive
  "
}

__git() {
  echo "
    git rebase -s recursive -X <ours/theirs>
  "
}

__jsonb() {
  echo "
    Operator	Right	Operand	Type	Description	Example
    @>	jsonb	Does the left JSON value contain within it the right value?	'{"a":1, "b":2}'::jsonb @> '{"b":2}'::jsonb
    <@	jsonb	Is the left JSON value contained within the right value?	'{"b":2}'::jsonb <@ '{"a":1, "b":2}'::jsonb
    ?	text	Does the key/element string exist within the JSON value?	'{"a":1, "b":2}'::jsonb ? 'b'
    ?|	text[]	Do any of these key/element strings exist?	'{"a":1, "b":2, "c":3}'::jsonb ?| array['b', 'c']
    ?&	text[]	Do all of these key/element strings exist?	'["a", "b"]'::jsonb ?& array['a', 'b']
  "
}

__deploy_pin() {
  echo "
    rails g deploy_pin:task
    be rake deploy_pin:run['pre']
    be rake deploy_pin:run['II']
    be rake deploy_pin:run['20201007114927']
    be rake deploy_pin:run['20210317172457!']
  "
}
